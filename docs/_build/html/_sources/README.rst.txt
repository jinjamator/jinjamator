Introduction
==================


Jinjamator is an automation framework built to make complex automation tasks as easy and boilerplate free as possible.

Features
-----------------

Jinjamator currently has following features:
    * run tasks written in python3
    * run tasks written in jinja2
    * register functions via content plugin system for python3 and jinja2 tasks, to have the same functionality.
    * run standalone as CLI application
    * run as REST API daemon, exporting tasks via REST API
    * gathering of required user inputs, determined by code inspection
    * validation of user inputs
    * log everthing to a database (daemon mode only, CLI is on roadmap)
    * support of different (customer) environments
    * distributed operation (daemon mode only)
    * output plugin system to further process data generated by tasks (e.g.: generate excel files from everthing)
    * includes a simple single-page javascript webapp for running tasks (automatically generates wizards from the task code)



Content Plugins
-----------------

* cisco.aci (query apic)
* ssh (run commands via ssh)
* fsm (parse ssh outputs to objects via textfsm)
* log

Many more to come.


Output Plugins
-----------------

* console (print data to stdout)
* excel (create a xlsx from task data)
* apic (push data to cisco ACI)
* null (supress output)

Many more to come.

Installation
------------

Install jinjamator by running:

    pip3 install jinjamator

Contribute
----------

- Issue Tracker: https://github.com/jinjamator/jinjamator/issues
- Source Code: https://github.com/jinjamator/jinjamator

Roadmap
-----------------

Selected Roadmap items:
    * create documentation ;)
    * refactor frontend webapp
    * include AAA for the API
    * run ansible playbooks as tasks
    * run powershell code

For documentation please refer to https://jinjamator.readthedocs.io/en/latest/

License
-----------------

This project is licensed under the Apache License Version 2.0